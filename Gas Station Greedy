class Solution {
public:
    int helper(vector<int>& gas, vector<int>& cost,int&n,int i){
        int idx=i;
        if(cost[idx]>gas[idx]){
            return (idx+1);
        }

        int count=0,fuel=0;
        while(count<n){
            fuel+=gas[idx];
            if(cost[idx]>fuel)
                return idx;
            
            fuel-=cost[idx];
            count+=1;
            idx=(idx+1)%n;
        }
        return idx;
    }

    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {
        int n=gas.size(),i=0;
        while(i<n){
            int idx=helper(gas,cost,n,i);
            if(i==idx)
                    return i;
            else if(idx<i)
                return -1;
            i=idx;
        }
        return -1;
    }
};
