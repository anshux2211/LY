class Solution {
public:
    int helper(vector<int>& gas, vector<int>& cost,int&n,int i){
        if(cost[i]>gas[i]){
            return (i+1);
        }

        int count=0,fuel=0;
        while(count<n){
            fuel+=gas[i];
            if(cost[i]>fuel)
                return i;
            
            fuel-=cost[i];
            count+=1;
            i=(i+1)%n;
        }
        return i;
    }

    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {
        int n=gas.size(),i=0;
        while(i<n){
            int idx=helper(gas,cost,n,i);
            if(i==idx)
                    return i;
            else if(idx<i)
                return -1;
            i=idx;
        }
        return -1;
    }
};
